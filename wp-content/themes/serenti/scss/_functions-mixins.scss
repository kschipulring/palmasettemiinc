// Setup the function in your functions or helpers files, wherever you keep these bits.
@function headings($from:1, $to:6) {
    @if $from == $to {
        @return 'h#{$from}';
    } @else {
        @return 'h#{$from},' + headings($from+1, $to);
    }
}

@mixin animation($str) {
	-webkit-animation: #{$str};
	-moz-animation: #{$str};
	-ms-animation: #{$str};
	-o-animation: #{$str};
	animation: #{$str};      
}

@mixin keyframes($animation-name) {
	@-webkit-keyframes #{$animation-name} {
		@content;
	}
	@-moz-keyframes #{$animation-name} {
		@content;
	}  
	@-ms-keyframes #{$animation-name} {
		@content;
	}
	@-o-keyframes #{$animation-name} {
		@content;
	}  
	@keyframes #{$animation-name} {
		@content;
	}
}

@mixin box-shadow($coords, $colorInset:"") {
	@if $coords == "none" {
		-webkit-box-shadow: none;
		-moz-box-shadow: none;
		box-shadow: none;
	}
	@else {
		-webkit-box-shadow: $coords #{$colorInset};
		-moz-box-shadow: $coords #{$colorInset};
		box-shadow: $coords #{$colorInset};
	}
}

@mixin border-radius($arc) {
	-moz-border-radius: $arc;
	-webkit-border-radius: $arc;
	border-radius: $arc;  
}

@mixin bp-large {
	@media only screen and (max-width: 60em) {
		@content;
	}
}

@mixin bp-medium {
	@media only screen and (max-width: 40em) {
		@content;
	}
}

@mixin bp-small {
	@media only screen and (max-width: 30em) {
		@content;
	}
}


@mixin for-phone-only {
  @media (max-width: 37.4375em) { @content; }
}
@mixin for-tablet-portrait-up {
  @media (min-width: 38em) { @content; }
}
@mixin for-tablet-landscape-up {
  @media (min-width: 56em) { @content; }
}
@mixin for-desktop-up {
  @media (min-width: 75em) { @content; }
}
@mixin for-big-desktop-up {
  @media (min-width: 100em) { @content; }
}


/*Cross browser REM font sizes*/
@function calculateRem($size) {
	$remSize: $size / 16px;
	@return $remSize * 1rem;
}

@mixin font-size($size) {
	font-size: $size;
	font-size: calculateRem($size);
}

@mixin font-face($style-name, $file, $category:"") {
    $filepath: "/wp-content/themes/serenti/fonts/" + $file;
    @font-face {
        font-family: "#{$style-name}";
        src: url($filepath + ".eot");
        src: url($filepath + ".eot?#iefix") format('embedded-opentype'), url($filepath + ".woff") format('woff'), url($filepath + ".ttf")  format('truetype'), url($filepath + ".svg#" + $style-name + "") format('svg');
    }
    %#{$style-name} {
        font: {
            @if $category != "" {
                family: "#{$style-name}", #{$category};
            }
            @else {
                family: "#{$style-name}";
                weight: normal;
            }
        }
    }
}

@mixin input-placeholder {
	&.placeholder { @content; }
	&:-moz-placeholder { @content; }
	&::-moz-placeholder { @content; }
	&:-ms-input-placeholder { @content; }
	&::-webkit-input-placeholder { @content; }
}

@mixin linear-gradient($direction, $color-stops...) {
	$hackDirection: $direction;

	@if $direction == top {
		$hackDirection: to bottom;
	} @else if $direction == left {
		$hackDirection: to right;
	} @else {
		$hackDirection: $direction;
	}

	background: nth(nth($color-stops, 1), 1);
	background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
	background: -moz-linear-gradient($direction, $color-stops);
	background: -ms-linear-gradient($direction, $color-stops);
	background: -o-linear-gradient($direction, $color-stops);
	background: linear-gradient($hackDirection, $color-stops);
}

@mixin transition($args...) {
	-o-transition: $args;
	-ms-transition: $args;
	-moz-transition: $args;
	-webkit-transition: $args;
}


/*cross browser clearfix*/
%clearfix {
	*zoom: 1;
	&:before, &:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}

/*
EXAMPLE:

.container-with-floated-children {
  @extend %clearfix;
}
*/


/*replacement for display:none for screen readers, as well as everything else*/
%visuallyhidden {
	margin: -1px;
	padding: 0;
	width: 1px;
	height: 1px;
	overflow: hidden;
	clip: rect(0 0 0 0);
	clip: rect(0, 0, 0, 0);
	position: absolute;
}

/*
EXAMPLE:

.visually-hidden {
  @extend %visuallyhidden;
}

*/
